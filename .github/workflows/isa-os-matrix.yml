# This is an attempt to build gaia for many OSes and instruction set architectures at once.
# The ARM64 binaries this process will produce will reduce the size of gaia-pi.img by several gigabytes.

name: Gaia Matrix
on: [push, pull_request]



  build:
    name: Build binaries
    strategy:
      matrix:
        buildOS: [darwin, linux, windows]
        project: [<LIST_OF_YOUR_BINARIES>]
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - uses: actions/checkout@v1
      - name: Build
        id: build
        uses: github.com/teserakt-io/gh-actions/go-build@master
        env:
          CI_USERNAME: "<YOUR_CI_BOT_USERNAME>"
          CI_ACCESS_TOKEN: ${{ secrets.CI_ACCESS_TOKEN }}
          GOOS: ${{ matrix.buildOS }}
          GOARCH: amd64
          CGO_ENABLED: 0
        with:
          project: ${{ matrix.project }}


jobs:
  build:
    runs-on: ${{ matrix.os }} 
    strategy:
      matrix: 
        arch: [amd64, arm64]
        targetos: [windows, darwin, linux]
        os: [ubuntu-latest, windows-latest, macos-latest]
    name: GAIA Go ${{ matrix.go }} ${{ matrix.os }} 
    steps:
      - uses: actions/checkout@v2
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
        env: |
          CI_USERNAME: "<YOUR_CI_BOT_USERNAME>"
          CI_ACCESS_TOKEN: ${{ secrets.CI_ACCESS_TOKEN }}
          GOOS: ${{ matrix.buildOS }}
          GOARCH: amd64
          CGO_ENABLED: 0
      - run: make build
            
      
      
# name: Cache Go modules
#  uses: actions/cache@preview
#  with:
#    path: ~/go/pkg/mod
#    key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
#		restore-keys: |
#      ${{ runner.OS }}-build-${{ env.cache-name }}-
#      ${{ runner.OS }}-build-
#      ${{ runner.OS }}-
