name: Test

on:
  workflow_call:
  pull_request:
    paths-ignore:
      - "**/*.md"
      - "docs/**"
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
      - "docs/**"

jobs:
  cleanup-runs:
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/main'"
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  test-coverage-upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: technote-space/get-diff-action@v6.1.2
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - uses: actions/cache@v3.0.11
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: actions/setup-go@v3.3.1
        with:
          go-version: 1.18
      - name: test & coverage report creation
        run: |
          go test -v -coverprofile=coverage.txt -covermode=atomic -coverpkg=./... $(go list ./...)
      - name: filter non-testable files
        run: |
          excludelist="$(find ./ -type f -name '*.go' | xargs grep -l 'DONTCOVER')"
          excludelist+=" $(find ./ -type f -name '*.pb.go')"
          excludelist+=" $(find ./ -type f -name '*.pb.gw.go')"
          excludelist+=" $(find ./cmd -type d)"
          excludelist+=" $(find ./tests -type d)"
          for filename in ${excludelist}; do
            filename=${filename#".//"}
            echo "Excluding ${filename} from coverage report..."
            filename=$(echo "$filename" | sed 's/\//\\\//g')
            sed -i.bak "/""$filename""/d" coverage.txt
          done
      - uses: codecov/codecov-action@v3.1.1
        with:
          file: ./coverage.txt
          fail_ci_if_error: true

  test-e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/setup-go@v3.0.0
        with:
          go-version: 1.18
      - uses: actions/checkout@v3.1.0
      - uses: technote-space/get-diff-action@v6.1.2
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - name: Build Docker Image
        run: make docker-build-debug
      - name: Test E2E
        run: make test-e2e

  liveness-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - uses: technote-space/get-diff-action@v6.1.2
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - name: Install Gaia
        run: |
          make build
        if: env.GIT_DIFF
      - name: Start Local Network
        run: |
          make start-localnet-ci > liveness.out 2>&1 &
        if: env.GIT_DIFF
      - name: Test Local Network Liveness
        run: |
          ./contrib/scripts/test_localnet_liveness.sh 100 5 50 localhost
        if: env.GIT_DIFF

  upgrade-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - uses: technote-space/get-diff-action@v6.1.2
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - name: Install GaiaV7
        run: |
          git checkout v7.1.0
          make build
          cp ./build/gaiad ./build/gaiad7
        if: env.GIT_DIFF
      - name: Install GaiaV8
        run: |
          git checkout -
          make build
          cp ./build/gaiad ./build/gaiad8
        if: env.GIT_DIFF
      - name: Install Cosmovisor
        run: |
          go install github.com/cosmos/cosmos-sdk/cosmovisor/cmd/cosmovisor@v1.0.0
        if: env.GIT_DIFF
      - name: Start GaiaV7
        run: |
          ./contrib/scripts/run-gaia-v7.sh > v7.out 2>&1 &
        if: env.GIT_DIFF
      - name: Submit Upgrade Commands
        run: |
          ./contrib/scripts/run-upgrade-commands.sh 15
        if: env.GIT_DIFF
      - name: Check for successful upgrade
        run: |
          ./contrib/scripts/test_upgrade.sh 20 5 16 localhost
        if: env.GIT_DIFF
