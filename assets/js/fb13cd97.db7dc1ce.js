"use strict";(self.webpackChunkcosmos_hub_docs_site=self.webpackChunkcosmos_hub_docs_site||[]).push([[7826],{5511:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"hub-tutorials/join-testnet","title":"Joining Testnet","description":"Visit the testnets repo for the most up-to-date information on the currently available public testnets:","source":"@site/docs/hub-tutorials/join-testnet.md","sourceDirName":"hub-tutorials","slug":"/hub-tutorials/join-testnet","permalink":"/main/hub-tutorials/join-testnet","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Joining Testnet","order":3},"sidebar":"tutorialSidebar","previous":{"title":"Joining Mainnet","permalink":"/main/hub-tutorials/join-mainnet"},"next":{"title":"Upgrading the Chain","permalink":"/main/hub-tutorials/live-upgrade-tutorial"}}');var i=n(2467),o=n(8453);const r={title:"Joining Testnet",order:3},a=void 0,l={},h=[{value:"How to Join",id:"how-to-join",level:2},{value:"Create a Validator (Optional)",id:"create-a-validator-optional",level:2},{value:"Upgrading Your Node",id:"upgrading-your-node",level:2},{value:"Cosmovisor Upgrade Example",id:"cosmovisor-upgrade-example",level:3}];function c(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["Visit the ",(0,i.jsx)(t.a,{href:"https://github.com/cosmos/testnets",children:"testnets repo"})," for the most up-to-date information on the currently available public testnets:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Interchain Security (ICS) Testnet: ",(0,i.jsx)(t.a,{href:"https://github.com/cosmos/testnets/blob/master/interchain-security/provider/README.md",children:(0,i.jsx)(t.code,{children:"provider"})})]}),"\n",(0,i.jsxs)(t.li,{children:["Release Testnet: ",(0,i.jsx)(t.a,{href:"https://github.com/cosmos/testnets/blob/master/legacy/theta-testnet-001/README.md",children:(0,i.jsx)(t.code,{children:"theta-testnet-001"})})]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"how-to-join",children:"How to Join"}),"\n",(0,i.jsx)(t.p,{children:"You can set up a testnet node with a single command using one of the options below:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Run a shell script from the testnets repo","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/cosmos/testnets/tree/master/interchain-security/provider#bash-script",children:"ICS Testnet"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/cosmos/testnets/blob/master/legacy/theta-testnet-001/README.md#bash-script",children:"Release testnet"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["Run an Ansible playbook from the ",(0,i.jsx)(t.a,{href:"https://github.com/hyphacoop/cosmos-ansible",children:"cosmos-ansible"})," repo","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/hyphacoop/cosmos-ansible/blob/main/examples/README.md#provider-chain",children:"ICS Testnet"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/hyphacoop/cosmos-ansible/blob/main/examples/README.md#join-the-cosmos-hub-release-testnet",children:"Release Testnet"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"create-a-validator-optional",children:"Create a Validator (Optional)"}),"\n",(0,i.jsxs)(t.p,{children:["If you want to create a validator in either testnet, request tokens through the ",(0,i.jsx)(t.a,{href:"https://discord.com/channels/669268347736686612/953697793476821092",children:"faucet Discord channel"})," and follow the ",(0,i.jsx)(t.a,{href:"https://github.com/cosmos/testnets/blob/master/interchain-security/VALIDATOR_JOINING_GUIDE.md#creating-a-validator-on-the-provider-chain",children:"this guide"}),". If you are creating a validator in the Release Testnet, you can disregard the instructions about joining live consumer chains."]}),"\n",(0,i.jsx)(t.h2,{id:"upgrading-your-node",children:"Upgrading Your Node"}),"\n",(0,i.jsx)(t.p,{children:"Follow these instructions if you have a node that is already synced and wish to participate in a scheduled testnet software upgrade."}),"\n",(0,i.jsxs)(t.p,{children:["When the chain reaches the upgrade block height specified by a software upgrade proposal, the chain binary will halt and expect the new binary to be run (the system log will show ",(0,i.jsx)(t.code,{children:'ERR UPGRADE "<Upgrade name>" NEEDED at height: XXXX'})," or something similar)."]}),"\n",(0,i.jsx)(t.p,{children:"There are three ways you can update the binary:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Without Cosmovisor: You must build or download the new binary ahead of the upgrade. When the chain binary halts at the upgrade height:"}),"\n"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Stop the gaiad service with ",(0,i.jsx)(t.code,{children:"systemctl stop gaiad.service"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["Build or download the new binary, replacing the existing ",(0,i.jsx)(t.code,{children:"~/go/bin"})," one."]}),"\n",(0,i.jsxs)(t.li,{children:["Start the gaiad service with ",(0,i.jsx)(t.code,{children:"systemctl start gaiad.service"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.ol,{start:"2",children:["\n",(0,i.jsx)(t.li,{children:"With Cosmovisor: You must build or download the new binary and copy it to the appropriate folder ahead of the upgrade."}),"\n",(0,i.jsx)(t.li,{children:"With Cosmovisor: Using the auto-download feature, assuming the proposal includes the binaries for your system architecture."}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["The instructions below are for option 2. For more information on auto-download with Cosmovisor, see the relevant ",(0,i.jsx)(t.a,{href:"https://github.com/cosmos/cosmos-sdk/tree/main/tools/cosmovisor#auto-download",children:"documentation"})," in the Cosmos SDK repo."]}),"\n",(0,i.jsxs)(t.p,{children:["If the environment variable ",(0,i.jsx)(t.code,{children:"DAEMON_ALLOW_DOWNLOAD_BINARIES"})," is set to ",(0,i.jsx)(t.code,{children:"false"}),", Cosmovisor will look for the new binary in a folder that matches the name of the upgrade specified in the software upgrade proposal."]}),"\n",(0,i.jsx)(t.h3,{id:"cosmovisor-upgrade-example",children:"Cosmovisor Upgrade Example"}),"\n",(0,i.jsxs)(t.p,{children:["Using the ",(0,i.jsx)(t.code,{children:"v17"})," upgrade as an example, the expected folder structure would look as follows:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-shell",children:".gaia\n\u2514\u2500\u2500 cosmovisor\n    \u251c\u2500\u2500 current\n    \u251c\u2500\u2500 genesis\n    \u2502   \u2514\u2500\u2500 bin\n    |       \u2514\u2500\u2500 gaiad\n    \u2514\u2500\u2500 upgrades\n        \u2514\u2500\u2500 v17\n            \u2514\u2500\u2500 bin\n                \u2514\u2500\u2500 gaiad\n"})}),"\n",(0,i.jsx)(t.p,{children:"Prepare the upgrade directory"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-shell",children:"mkdir -p ~/.gaia/cosmovisor/upgrades/v17/bin\n"})}),"\n",(0,i.jsx)(t.p,{children:"Download and install the new binary version."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-shell",children:"cd $HOME/gaia\ngit pull\ngit checkout v17.0.0-rc0\nmake install\n\n# Copy the new binary to the v17 upgrade directory\ncp ~/go/bin/gaiad ~/.gaia/cosmovisor/upgrades/v17/bin/gaiad\n"})}),"\n",(0,i.jsxs)(t.p,{children:["When the upgrade height is reached, Cosmovisor will stop the gaiad binary, update the symlink from ",(0,i.jsx)(t.code,{children:"current"})," to the relevant upgrade folder, and restart. After a few minutes, the node should start syncing blocks using the new binary."]})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(6540);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);