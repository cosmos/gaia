syntax = "proto3";
package interchain_security.ccv.consumer.v1;
option go_package = "github.com/cosmos/interchain-security/v7/x/ccv/consumer/types";

import "amino/amino.proto";
import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "interchain_security/ccv/v1/shared_consumer.proto";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // signer is the address of the governance account.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // params defines the x/provider parameters to update.
  interchain_security.ccv.v1.ConsumerParams params = 2
      [ (gogoproto.nullable) = false ];
}

message MsgUpdateParamsResponse {}
